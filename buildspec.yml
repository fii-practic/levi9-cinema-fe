version: 0.2

phases:
  pre_build:
    commands:
      - echo Initialize some required env variables...
      - aws --version
      - AWS_ACCOUNT_ID=`aws sts get-caller-identity --query 'Account' --output text`
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo Set REPOSITORY_URI...
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/docker-$IMAGE_REPO_NAME
      - COMMIT_HASH=${CODEBUILD_RESOLVED_SOURCE_VERSION:0:7}
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - sed -i "s/AWS_ACCOUNT_PLACEHOLDER/$AWS_ACCOUNT_ID/g" taskdef.json
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '{"ImageURI":"%s"}' $REPOSITORY_URI:$IMAGE_TAG > imageDetail.json
      - echo Verify the replacements...
      - cat taskdef.json
      - cat imageDetail.json
      - cat appspec.yaml
      - echo Build completed on `date`

artifacts:
    files:
      - imageDetail.json
      - appspec.yaml
      - taskdef.json
